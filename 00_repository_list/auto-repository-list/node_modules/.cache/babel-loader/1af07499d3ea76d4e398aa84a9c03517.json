{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\40_day_project_javascript\\\\00_repository_list\\\\auto-repository-list\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport './App.css';\n\nfunction App() {\n  _s();\n\n  const [list, setList] = useState([]);\n  useEffect(async () => {\n    try {\n      const response = await fetch(\"https://api.github.com/users/lofung/repos\");\n      const jsonData = await response.json();\n      const result = jsonData.filter(entry => entry.has_pages === true); //console.log(jsonData);\n\n      setList(result);\n    } catch (err) {\n      console.error(err.message);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"List of small gadget projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"This page is currently made in simple mode. It would be updated to a modern frontend when there is more time.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), list.map((entry, idx) => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: entry.svn_url,\n        children: entry.name\n      }, idx + entry.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: entry.svn_url,\n        children: \"github\"\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 73\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 117\n      }, this)]\n    }, void 0, true)), /*#__PURE__*/_jsxDEV(\"h6\", {\n      children: \"This page is rendered by simple react/hook pulling an github API of repository.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://old.reddit.com/r/learnjavascript/comments/ke8b5p/getting_an_array_of_all_github_repository_that/gg19r7u/?context=3\",\n        children: \"source\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ZBNfaudzy8bVxb8UgkyyMnLdlWY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["F:/40_day_project_javascript/00_repository_list/auto-repository-list/src/App.js"],"names":["React","useEffect","useState","App","list","setList","response","fetch","jsonData","json","result","filter","entry","has_pages","err","console","error","message","map","idx","svn_url","name"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,YAAY;AACpB,QAAI;AACF,YAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,2CAAD,CAA5B;AACA,YAAMC,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAvB;AACA,YAAMC,MAAM,GAAGF,QAAQ,CAACG,MAAT,CAAgBC,KAAK,IAAIA,KAAK,CAACC,SAAN,KAAoB,IAA7C,CAAf,CAHE,CAIF;;AACAR,MAAAA,OAAO,CAACK,MAAD,CAAP;AACD,KAND,CAME,OAAOI,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAG,CAACG,OAAlB;AACD;AACF,GAVQ,EAUN,EAVM,CAAT;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAIGb,IAAI,CAACc,GAAL,CAAS,CAACN,KAAD,EAAQO,GAAR,kBACR;AAAA,8BAAE;AAAG,QAAA,IAAI,EAAEP,KAAK,CAACQ,OAAf;AAAA,kBAA8CR,KAAK,CAACS;AAApD,SAA6BF,GAAG,GAACP,KAAK,CAACS,IAAvC;AAAA;AAAA;AAAA;AAAA,cAAF,oBAAgE;AAAG,QAAA,IAAI,EAAET,KAAK,CAACQ,OAAf;AAAA;AAAA,SAA6BD,GAA7B;AAAA;AAAA;AAAA;AAAA,cAAhE,eAA4G;AAAA;AAAA;AAAA;AAAA,cAA5G;AAAA,oBADD,CAJH,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AAAA,6BAAI;AAAG,QAAA,IAAI,EAAC,4HAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GA5BQhB,G;;KAAAA,G;AA8BT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport './App.css';\n\nfunction App() {\n  const [list, setList] = useState([]);\n\n  useEffect(async () => {\n    try {\n      const response = await fetch(\"https://api.github.com/users/lofung/repos\");\n      const jsonData = await response.json();\n      const result = jsonData.filter(entry => entry.has_pages === true);\n      //console.log(jsonData);\n      setList(result);\n    } catch (err) {\n      console.error(err.message);\n    }\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h3>List of small gadget projects</h3>\n      <h4>This page is currently made in simple mode. It would be updated to a modern frontend when there is more time.</h4>\n      {/* list */}\n      {list.map((entry, idx) => \n        <><a href={entry.svn_url} key={idx+entry.name}>{entry.name}</a> <a href={entry.svn_url} key={idx}>github</a><br /></>\n      )}\n      <h6>This page is rendered by simple react/hook pulling an github API of repository.</h6>\n      <h6><a href=\"https://old.reddit.com/r/learnjavascript/comments/ke8b5p/getting_an_array_of_all_github_repository_that/gg19r7u/?context=3\">source</a></h6>\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
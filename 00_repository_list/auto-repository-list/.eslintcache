[{"F:\\40_day_project_javascript\\00_repository_list\\auto-repository-list\\src\\index.js":"1","F:\\40_day_project_javascript\\00_repository_list\\auto-repository-list\\src\\App.js":"2"},{"size":220,"mtime":1608153464921,"results":"3","hashOfConfig":"4"},{"size":1349,"mtime":1608722799864,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"8"},"dl5o9g",{"filePath":"9","messages":"10","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"11"},"F:\\40_day_project_javascript\\00_repository_list\\auto-repository-list\\src\\index.js",[],["12","13"],"F:\\40_day_project_javascript\\00_repository_list\\auto-repository-list\\src\\App.js",["14"],"import React, { useEffect, useState } from \"react\";\nimport './App.css';\n\nfunction App() {\n  const [list, setList] = useState([]);\n\n  useEffect(async () => {\n    try {\n      const response = await fetch(\"https://api.github.com/users/lofung/repos\");\n      const jsonData = await response.json();\n      const result = jsonData.filter(entry => entry.has_pages === true);\n      //console.log(jsonData);\n      setList(result);\n    } catch (err) {\n      console.error(err.message);\n    }\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h3>List of small gadget projects</h3>\n      <h4>This page is currently made in simple mode. It would be updated to a modern frontend when there is more time.</h4>\n      {/* list */}\n      <span>Repository Name // </span><span>Github // </span><span>Last Update Date // </span><br />\n      {list.map((entry, idx) => \n        <><a href={\"http://lofung.github.io/\" + entry.name} key={idx+ \"abc\"}>{entry.name}</a> <a href={entry.svn_url} key={idx}>github</a><span> {entry.updated_at.split(\"T\")[0]}</span><br /></>\n      )}\n      <h6>This page is rendered by simple react/hook pulling an github API of repository.</h6>\n      <h6><a href=\"https://old.reddit.com/r/learnjavascript/comments/ke8b5p/getting_an_array_of_all_github_repository_that/gg19r7u/?context=3\">source</a></h6>\n\n    </div>\n  );\n}\n\nexport default App;\n",{"ruleId":"15","replacedBy":"16"},{"ruleId":"17","replacedBy":"18"},{"ruleId":"19","severity":1,"message":"20","line":7,"column":13,"nodeType":"21","endLine":17,"endColumn":4},"no-native-reassign",["22"],"no-negated-in-lhs",["23"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-global-assign","no-unsafe-negation"]